// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Category {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  description String?
  image       String?
  isActive    Boolean  @default(true)
  sortOrder   Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  products Product[]

  @@map("categories")
}

model Product {
  id          String   @id @default(cuid())
  sku         String   @unique
  name        String
  slug        String   @unique
  description String?
  price       Float
  originalPrice Float?
  currency    String   @default("VND")
  categoryId  String
  images      String[] // JSON array of image URLs
  status      String   @default("active") // active, inactive, out_of_stock
  isFeatured  Boolean  @default(false)
  sortOrder   Int      @default(0)
  metaTitle   String?
  metaDescription String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  variants ProductVariant[]
  leads    Lead[]

  @@map("products")
}

model ProductVariant {
  id        String  @id @default(cuid())
  productId String
  name      String  // e.g., "1 Tháng", "3 Tháng"
  price     Float
  isDefault Boolean @default(false)
  sortOrder Int     @default(0)

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_variants")
}

model Lead {
  id           String   @id @default(cuid())
  orderRef     String   @unique
  productId    String?
  productName  String
  price        Float
  variant      String?
  quantity     Int      @default(1)
  status       String   @default("pending_chat") // pending_chat, contacted, success, lost
  sessionId    String?
  clientIp     String?
  userAgent    String?
  landingUrl   String?
  referrer     String?
  utmSource    String?
  utmCampaign  String?
  utmMedium    String?
  deviceType   String?
  notes        String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  product Product? @relation(fields: [productId], references: [id])

  @@map("leads")
}

model AdminUser {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  role      String   @default("admin") // admin, super_admin
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admin_users")
}

model Page {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  content     String
  metaTitle   String?
  metaDescription String?
  isActive    Boolean  @default(true)
  sortOrder   Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("pages")
}

model Setting {
  id    String @id @default(cuid())
  key   String @unique
  value String
  type  String @default("string") // string, number, boolean, json

  @@map("settings")
}

